<project name="blank" basedir="../" default="all">


    <!-- Local system paths -->
    <property name="servlet.jar" value="C:\apache-tomcat-7.0.57\lib\servlet-api.jar"/>
    <property name="jdbc20ext.jar" value="/javasoft/lib/jdbc2_0-stdext.jar"/>
        <!-- NOTE: If "dist" target is used, a local
             "projects/lib" directory will be utilized or created -->
    <property name="distpath.project" value="/projects/lib"/>
	<property name="tomcat" location="C:\apache-tomcat-7.0.57" />
	<property name="deploy.location" location="${tomcat}/webapps" />

    <!-- Project settings -->
    <property name="project.title" value="Jakarta Struts Blank "/>
    <property name="project.distname" value="strutsTutorial"/>
    <property name="project.version" value="1.1"/>


    <!-- Path settings -->
    <property name="doc.path" value="./doc/api"/>
    <property name="doc.src" value="./src/java"/>

	<property name="start.server.file" location="${tomcat}/bin/startup.bat" />
	<property name="stop.server.file" location="${tomcat}/bin/shutdown.bat" />

    <!-- classpath for Struts 1.1 -->
    <path id="compile.classpath">
        <pathelement path ="lib/commons-beanutils.jar"/>
        <pathelement path ="lib/commons-digester.jar"/>
        <pathelement path ="lib/struts.jar"/>
        <pathelement path ="classes"/>
        <pathelement path ="${classpath}"/>
    	<pathelement path ="${servlet.jar}"/>
    	<pathelement path ="lib/commons-logging.jar"/>
    </path>


    <!-- Check timestamp on files -->
    <target name="prepare">
        <tstamp/>
    </target>


    <!-- Copy any resource or configuration files -->
    <target name="resources">
        <copy todir="classes" includeEmptyDirs="no">
            <fileset dir="src/java">
            <patternset>
                <include name="**/*.conf"/>
                <include name="**/*.properties"/>
                <include name="**/*.xml"/>
            </patternset>
            </fileset>
        </copy>
    </target>


    <!-- Normal build of application -->
    <target name="compile" depends="prepare,resources">
        <javac srcdir="src" destdir="classes" includeantruntime="false">
            <classpath refid="compile.classpath"/>
        </javac>
    </target>


    <!-- Remove classes directory for clean build -->
    <target name="clean"
      description="Prepare for clean build">
      <delete dir="classes"/>
      <mkdir  dir="classes"/>
    </target>


    <!-- Build Javadoc documentation -->
    <target name="javadoc"
     description="Generate JavaDoc API docs">
        <delete dir="./doc/api"/>
        <mkdir dir="./doc/api"/>
        <javadoc sourcepath="./src/java"
            destdir="./doc/api"
            classpath="${servlet.jar}:${jdbc20ext.jar}"
            packagenames="*"
            author="true"
            private="true"
            version="true"
            windowtitle="${project.title} API Documentation"
            doctitle="&lt;h1&gt;${project.title} Documentation (Version ${project.version})&lt;/h1&gt;"
            bottom="Copyright &#169; 2002">
            <classpath refid="compile.classpath"/>
        </javadoc>
    </target>


    <!-- Build entire project -->
    <target name="project" depends="clean,prepare,compile,javadoc"/>


    <!-- Create binary distribution -->
    <target name="dist"
        description="Create binary distribution">

      <mkdir
        dir="${distpath.project}"/>
      <jar
        jarfile="${distpath.project}/${project.distname}.jar"
        basedir="./classes"/>
      <copy
        file="${distpath.project}/${project.distname}.jar"
        todir="${distpath.project}"/>

      <war
        basedir="../"
        warfile="${distpath.project}/${project.distname}.war"
        webxml="web.xml">
        <exclude name="${distpath.project}/${project.distname}.war"/>
       </war>

    </target>
	
	<target name="deploy" depends="dist">
		<copy file="${distpath.project}/${project.distname}.war" todir="${deploy.location}" />
	</target>

    <!-- Build project and create distribution-->
    <target name="all" depends="project,dist,deploy"/>
	<target name="start">
		<exec executable="${start.server.file}" />
	</target>

	<target name="stop">
		<exec executable="${stop.server.file}" />
	</target>
</project>
